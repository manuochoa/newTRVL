{"version":3,"sources":["assets/images/baba.png","components/sidebar/components/drawer.js","components/sidebar/components/responsive.js","blockchain/interface/web3.js","components/sidebar/index.js","blockchain/interface/NFT1155.js","blockchain/interface/Marketplace.js","blockchain/interface/simpleExchange.js","blockchain/interface/TRVL.js","blockchain/interface/Staking.js","blockchain/blockchain-functions/functions.js","components/wallet-button/WalletButton.js","components/header/index.js","components/header/components/Card.js","pages/create/index.js","pages/dashboard/components/NFTCard.js","pages/dashboard/index.js","blockchain/blockchain-functions/marketFunctions.js","pages/sell/index.js","pages/P2PMarketplace/components/card.js","pages/P2PMarketplace/index.js","pages/assetSell/components/youtubeEmbed.js","pages/assetSell/components/AssetSellTab.js","pages/assetSell/index.js","pages/exchange/index.js","App.js","index.js"],"names":["DrawerComponent","drawerWidth","classes","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","drawerPaper","content","flexGrow","padding","useStyles","className","toolbar","List","ListItem","ListItemIcon","src","baba","alt","ListItemAvatar","Avatar","ListItemText","primary","secondary","button","to","Responsive","web3","props","window","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","container","undefined","document","body","AppBar","position","Toolbar","IconButton","color","edge","onClick","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","Web3","require","ethereum","givenProvider","alert","ERC1155Address","NFT1155","eth","Contract","ERC1155","abi","MarketplaceAddress","MarketplaceInstance","Marketplace","simpleExchange","SimpleExchange","TRVL","TRVLabi","StakingAddress","StakingContract","Staking","Moralis","initialize","serverURL","Token","Object","extend","currentUser","User","current","login","a","authenticate","newUser","get","console","log","activeUser","logout","logOut","then","uploadFile","data","fileToUpload","File","name","type","saveIPFS","saveToMoralis","details","result","token","set","location","description","tag","external_url","youtube_url","URI","Hash","events","TransferSingle","returnValues","id","save","error","message","createMultiNFT","NFTDetails","instance","metadata","base64","btoa","JSON","stringify","methods","create","amount","hash","send","from","selectedAddress","newNFT","getNFTBalance","options","chain","address","getNFTs","BscNFT2","ids","map","nft","token_address","toUpperCase","push","token_id","query","Query","containedIn","find","response","getAmount","balanceOf","call","createOrder","NFTid","price","_price","utils","toWei","newOrder","getOrders","orderById","order","BuyToken","_amount","buy","TRVLbalance","user","toFixed","TShareBalance","balance","TRVLBalanceOf","staked","calculateInterests","interest","stakeTRVL","deposit","withdrawStake","withdraw","approveCoinStake","approve","isApprovedCoinStake","allowance","collectEarnings","withdrawInterests","WalletButton","setUser","logged","setLogged","logIn","getUser","useEffect","Button","startIcon","substring","Card","setTRVL","TShare","setTShare","getTRVLbalance","getTShareBalance","Box","Grid","item","xs","sm","Typography","component","lg","Paper","maxHeight","style","height","textAlign","palette","text","MultiNFT","setNFTDetails","fileUploaded","setFileUploaded","isUploading","setIsUploading","handleUpload","e","target","files","_ipfs","_hash","handleCreate","placeItems","includes","maxWidth","controls","CircularProgress","size","onChange","noValidate","autoComplete","TextField","fullWidth","placeholder","value","TextareaAutosize","minRows","FormControl","InputLabel","htmlFor","Select","native","inputProps","defaultValue","disabled","NFTCard","NFTinfo","setNFTinfo","attributes","setInfo","CardActionArea","pathname","CardMedia","objectFit","image","title","CardContent","gutterBottom","marginTop","Dashboard","NFT","setNFT","getNFT","i","NFTBalance","justifyContent","alignItems","length","getMarketNFTBalance","getIds","getSellers","getBids","_nftId","orderId","bidByOrderId","placeBid","_assetId","_priceInWei","_orderId","safePlaceBid","receipt","updateOrder","_asetId","cancelOrder","_sellerAddress","getSellersIndex","sellersIndex","getSellerIndex","sellerIndex","buyAsset","_sellersIndex","_sellerIndex","safeExecuteOrder","takeBid","acceptBid","cancelBid","isApprovedNFT1155","isApprovedForAll","approveNFT1155","setApprovalForAll","isApprovedCoin","approveCoin","getTRVLPrice","getTrvlPrice","getNFTinfo","equalTo","first","getOrdersId","orders","findIndex","SellPage","useParams","isApproved","setIsApproved","amountToSell","setAmountToSell","setPrice","isLoading","setIsLoading","balanceNFT","setBalanceNFT","trvlAmount","setTrvlAmount","usdAmount","setUsdAmount","selectedNFT","getSelectedNFT","_id","handleSelectChange","checkApproval","checkConvertionRate","as","marginBottom","num","Number","handleAmountChange","NFTcard","bestPrice","setBestPrice","setOrders","ordersIds","setOrdersIds","TRVLprice","setTRVLprice","Ids","getOrder","getBestTRVLprice","TrvlPrice","best","getMinimumPrice","CenteredGrid","filter","setFilter","marketNFTbalance","setMarketNFTbalance","alignment","setAlignment","getMarketNFTs","ToggleButtonGroup","exclusive","event","newAlignment","ToggleButton","getYouTubeID","YoutubeEmbed","embedId","frameBorder","allow","allowFullScreen","TabPanel","children","index","other","role","hidden","p","a11yProps","backgroundColor","background","SimpleTabs","setValue","seller","NFTdata","setNFTdata","bidder","bid","setBid","setAmount","getBid","newBid","handlePlaceBid","handleAcceptBid","handleCancelBid","Tabs","newValue","Tab","label","varient","align","media","setMedia","newPrice","setNewPrice","trvlPrice","setTrvlPrice","ordersDetails","setOrdersDetails","handleCancelOrder","handleUpdateOrder","handleBuy","getInfo","nftInfo","getData","checkTokenApproval","BottomNavigation","showLabels","BottomNavigationAction","icon","href","rel","stake","setStake","isApprovedStake","setIsApprovedStake","checkStakeApproval","CardActions","App","CssBaseline","path","render","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.738ee1ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/baba.0b74d374.png\";","import { Link } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { RiExchangeDollarLine } from \"react-icons/ri\";\r\nimport { MdRedeem } from \"react-icons/md\";\r\nimport { FiGrid } from \"react-icons/fi\";\r\nimport { GiSellCard } from \"react-icons/gi\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ListItem, ListItemText, ListItemIcon } from \"@material-ui/core\";\r\nimport baba from \"../../../assets/images/baba.png\";\r\n\r\nfunction DrawerComponent() {\r\n  const drawerWidth = 240;\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n\r\n      <List>\r\n        <ListItem className=\"sidebar_icons\">\r\n          <ListItemIcon className=\"baba_img\">\r\n            <img src={baba} alt=\"logo\" />\r\n          </ListItemIcon>\r\n        </ListItem>\r\n        <ListItem className=\"sidebar_icons user_box\">\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <ImageIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Trvl user\" secondary=\"trvl.com\" />\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiGrid className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Dashboard\" />{\" \"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiGrid className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/create\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Create\" />{\" \"}\r\n          </Link>\r\n        </ListItem>\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <GiSellCard className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/sell\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Sell\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <MdRedeem className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/p2pmarketplace\">\r\n            <ListItemText primary=\"P2P Marketplace\" className=\"jobs_clr\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <RiExchangeDollarLine className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/exchange\">\r\n            <ListItemText primary=\"Exchange \" className=\"jobs_clr\" />\r\n          </Link>\r\n        </ListItem>\r\n\r\n        <ListItem button className=\"sidebar_icons\">\r\n          <ListItemIcon>\r\n            <FiSettings className=\"font_job_si\" />\r\n          </ListItemIcon>\r\n          <Link to=\"/userdashboard\">\r\n            <ListItemText className=\"ttle_clr_ssbr\" primary=\"Setting\" />\r\n          </Link>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerComponent;\r\n","import React from \"react\";\r\nimport DrawerComponent from \"./drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport \"./responsiveDrawer.scss\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Responsive(props) {\r\n  const { window } = props;\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* <Typography noWrap className=\"d-flex\">\r\n            <h4 className=\"swatada\">Developers</h4>\r\n          </Typography> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            <DrawerComponent />\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            <DrawerComponent />\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Responsive;\r\n","const Web3 = require(\"web3\");\n\nlet web3;\n\nif (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n  //we are in the browser and metamask is running\n  web3 = new Web3(Web3.givenProvider);\n} else {\n  //we are on the server or the user don't have metamask\n\n  window.alert(\"Please Install Metamask\");\n  // const provider = new Web3.providers.HttpProvider(\n  //     \"https://data-seed-prebsc-1-s1.binance.org:8545\"\n  // );\n  // web3 = new Web3(provider);\n}\n\nexport default web3;\n\n// const Web3 = require(\"web3\");\n\n// const NODE_URL =\n//   \"https://speedy-nodes-nyc.moralis.io/1d19a6082204e3ecd8dcf0b9/bsc/testnet\";\n// const provider = new Web3.providers.HttpProvider(NODE_URL);\n// const web3 = new Web3(provider);\n\n// export default web3;\n","import Responsive from \"./components/responsive\";\r\n\r\nexport default Responsive;\r\n","import web3 from \"./web3\";\r\nimport ERC1155 from \"../abi/TRVLNFT.json\";\r\n\r\n// export const ERC1155Address = \"0x6704beA722f7A70845430b26CAd3d30Ba300e279\";\r\nexport const ERC1155Address = \"0xc53A9e77Fe53BE4f09c5FB13EBBB8bAe125348cb\";\r\n\r\nfunction NFT1155() {\r\n  return new web3.eth.Contract(ERC1155.abi, ERC1155Address);\r\n}\r\n\r\nexport default NFT1155;\r\n","import web3 from \"./web3\";\r\nimport Marketplace from \"../abi/Marketplace.json\";\r\n\r\nexport const MarketplaceAddress = \"0x3e9b63e20Bec8f7cdf6073557b5ea4d1AaBD68ff\";\r\n\r\nfunction MarketplaceInstance() {\r\n  return new web3.eth.Contract(Marketplace.abi, MarketplaceAddress);\r\n}\r\n\r\nexport default MarketplaceInstance;\r\n","import web3 from \"./web3\";\r\nimport SimpleExchange from \"../abi/simpleExchange.json\";\r\n\r\nexport const SimpleExchangeAddress =\r\n  \"0xd81Eb339362B2f202E7D28F87E27B471c4226f93\";\r\n\r\nfunction simpleExchange() {\r\n  return new web3.eth.Contract(SimpleExchange.abi, SimpleExchangeAddress);\r\n}\r\n\r\nexport default simpleExchange;\r\n","import web3 from \"./web3\";\r\nimport TRVLabi from \"../abi/TRVL.json\";\r\n\r\nexport const TRVLAddress = \"0x419c89E7a632784b530706724a46c994bB486FbD\";\r\n\r\nfunction TRVL() {\r\n  return new web3.eth.Contract(TRVLabi.abi, TRVLAddress);\r\n}\r\n\r\nexport default TRVL;\r\n","import web3 from \"./web3\";\r\nimport Staking from \"../abi/StakingToken.json\";\r\n\r\nexport const StakingAddress = \"0xCE58217570C9805830Bb47E46483937225Cee27a\";\r\n\r\nfunction StakingContract() {\r\n  return new web3.eth.Contract(Staking.abi, StakingAddress);\r\n}\r\n\r\nexport default StakingContract;\r\n","import NFT1155, { ERC1155Address } from \"../interface/NFT1155\";\r\nimport Marketplace from \"../interface/Marketplace\";\r\nimport SimpleExchange from \"../interface/simpleExchange\";\r\nimport TRVL from \"../interface/TRVL\";\r\nimport Staking, { StakingAddress } from \"../interface/Staking\";\r\nimport web3 from \"../interface/web3\";\r\n\r\nconst Moralis = require(\"moralis\");\r\nMoralis.initialize(\"9jTSEy7eKGdH8EBCOvH5zCYM01TxksUQcItcbfQg\");\r\nMoralis.serverURL = \"https://dzfl3tiplyqt.usemoralis.com:2053/server\";\r\nconst Token = Moralis.Object.extend(\"Token\");\r\nlet currentUser = Moralis.User.current();\r\n\r\nexport const login = async () => {\r\n  try {\r\n    let newUser = await Moralis.Web3.authenticate();\r\n\r\n    return newUser.get(\"ethAddress\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const activeUser = async () => {\r\n  try {\r\n    return currentUser.get(\"ethAddress\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    Moralis.User.logOut().then(() => {\r\n      console.log(Moralis.User.current());\r\n    });\r\n    return currentUser.get(\"ethAddress\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport async function uploadFile(data) {\r\n  try {\r\n    const fileToUpload = new Moralis.File(data.name, data);\r\n    fileToUpload.type = data.type;\r\n    await fileToUpload.saveIPFS();\r\n\r\n    return fileToUpload;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const saveToMoralis = async (details, result) => {\r\n  const token = new Token();\r\n\r\n  token.set(\"name\", details.name);\r\n  token.set(\"location\", details.location);\r\n  token.set(\"description\", details.description);\r\n  token.set(\"tag\", details.tag);\r\n  token.set(\"external_url\", details.external_url);\r\n  token.set(\"youtube_url\", details.youtube_url);\r\n  token.set(\"type\", details.type);\r\n  token.set(\"URI\", details.URI);\r\n  token.set(\"Hash\", details.Hash);\r\n  token.set(\"NFTid\", result.events.TransferSingle.returnValues.id);\r\n\r\n  token.save().then(\r\n    (token) => {\r\n      // Execute any logic that should take place after the object is saved.\r\n      window.alert(\"New object created with objectId: \" + token.id);\r\n    },\r\n    (error) => {\r\n      // Execute any logic that should take place if the save fails.\r\n      // error is a Moralis.Error with an error code and message.\r\n      window.alert(\r\n        \"Failed to create new object, with error code: \" + error.message\r\n      );\r\n    }\r\n  );\r\n};\r\n\r\nexport const createMultiNFT = async (NFTDetails) => {\r\n  try {\r\n    let instance = await NFT1155();\r\n    const metadata = new Moralis.File(\"metadata.json\", {\r\n      base64: btoa(JSON.stringify(NFTDetails)),\r\n    });\r\n    await metadata.saveIPFS();\r\n\r\n    const newNFT = await instance.methods\r\n      .create(NFTDetails.amount, metadata.hash())\r\n      .send({ from: window.ethereum.selectedAddress });\r\n\r\n    console.log(newNFT);\r\n    return newNFT;\r\n  } catch (error) {\r\n    console.log(\"create error\", error);\r\n  }\r\n};\r\n\r\nexport const getNFTBalance = async () => {\r\n  try {\r\n    const options = {\r\n      chain: \"bsc testnet\",\r\n      address: window.ethereum.selectedAddress,\r\n      // token_address: \"0xc53a9e77fe53be4f09c5fb13ebbb8bae125348cb\",\r\n    };\r\n    // const BscNFT2 = await Moralis.Web3API.account.getNFTsForContract(options);\r\n    const BscNFT2 = await Moralis.Web3.getNFTs(options);\r\n\r\n    let ids = [];\r\n    await BscNFT2.map((nft) => {\r\n      if (nft.token_address.toUpperCase() === ERC1155Address.toUpperCase()) {\r\n        ids.push(nft.token_id);\r\n      }\r\n      return nft;\r\n    });\r\n    const query = new Moralis.Query(Token);\r\n    query.containedIn(\"NFTid\", ids);\r\n    const response = await query.find();\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getAmount = async (id) => {\r\n  try {\r\n    let instance = await NFT1155();\r\n    let amount = await instance.methods\r\n      .balanceOf(window.ethereum.selectedAddress, id)\r\n      .call();\r\n    return amount;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createOrder = async (NFTid, amount, price) => {\r\n  try {\r\n    let instance = await Marketplace();\r\n    let _price = web3.utils.toWei(price);\r\n    const newOrder = await instance.methods\r\n      .createOrder(ERC1155Address, NFTid, amount, _price)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n\r\n    return newOrder;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getOrders = async (id) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let order = await instance.methods.orderById(id).call();\r\n    return order;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const BuyToken = async (_amount) => {\r\n  let instance = await SimpleExchange();\r\n  let _price = web3.utils.toWei(_amount);\r\n  try {\r\n    let order = await instance.methods\r\n      .buy(_price)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return order;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const TRVLbalance = async () => {\r\n  let instance = await TRVL();\r\n  let user = await currentUser.get(\"ethAddress\");\r\n  try {\r\n    let result = await instance.methods.balanceOf(user).call();\r\n    return (result / 1e18).toFixed(2);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const TShareBalance = async () => {\r\n  let instance = await Staking();\r\n  let user = await currentUser.get(\"ethAddress\");\r\n  try {\r\n    let balance = await instance.methods.balanceOf(user).call();\r\n    let staked = await instance.methods.TRVLBalanceOf(user).call();\r\n    let interest = await instance.methods.calculateInterests(user).call();\r\n    return {\r\n      balance: (balance / 1e18).toFixed(2),\r\n      staked: (staked / 1e18).toFixed(2),\r\n      interest: (interest / 1e18).toFixed(2),\r\n    };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const TShareInterest = async () => {\r\n  let instance = await Staking();\r\n  let user = await currentUser.get(\"ethAddress\");\r\n  try {\r\n    let interest = await instance.methods.calculateInterests(user).call();\r\n    return interest;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const stakeTRVL = async (_amount) => {\r\n  let instance = await Staking();\r\n  let amount = web3.utils.toWei(_amount);\r\n  try {\r\n    let result = await instance.methods\r\n      .deposit(amount)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const withdrawStake = async () => {\r\n  let instance = await Staking();\r\n\r\n  try {\r\n    let result = await instance.methods\r\n      .withdraw()\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const approveCoinStake = async () => {\r\n  let instance = await TRVL();\r\n  let _amount = web3.utils.toWei(\"1000000\");\r\n  try {\r\n    let result = await instance.methods\r\n      .approve(StakingAddress, _amount)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const isApprovedCoinStake = async () => {\r\n  let instance = await TRVL();\r\n  try {\r\n    let result = instance.methods\r\n      .allowance(window.ethereum.selectedAddress, StakingAddress)\r\n      .call();\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const collectEarnings = async () => {\r\n  let instance = await Staking();\r\n  try {\r\n    let result = await instance.methods\r\n      .withdrawInterests()\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { useWallet, UseWalletProvider } from \"use-wallet\";\r\nimport { BiWallet } from \"react-icons/bi\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  login,\r\n  logout,\r\n  activeUser,\r\n} from \"../../blockchain/blockchain-functions/functions\";\r\n\r\nimport \"./walletbutton.scss\";\r\n\r\nfunction WalletButton() {\r\n  const [user, setUser] = useState(null);\r\n  const [logged, setLogged] = useState(false);\r\n\r\n  const logIn = async () => {\r\n    let result = await login();\r\n    if (result) {\r\n      setUser(result);\r\n      setLogged(true);\r\n    }\r\n  };\r\n\r\n  const logOut = async () => {\r\n    let result = await logout();\r\n    setLogged(false);\r\n    setUser(result);\r\n  };\r\n\r\n  const getUser = async () => {\r\n    let result = await activeUser();\r\n    if (result) {\r\n      setUser(result);\r\n      setLogged(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, [logged]);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {logged ? (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"connect_wallect\"\r\n          onClick={logOut}\r\n          startIcon={<BiWallet />}\r\n        >\r\n          {user?.substring(0, 10)}...{user?.substring(36, 41)}\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"connect_wallect\"\r\n          onClick={logIn}\r\n          startIcon={<BiWallet />}\r\n        >\r\n          Connect wallet\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WalletButton;\r\n","import Card from \"./components/Card\";\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  TRVLbalance,\r\n  TShareBalance,\r\n} from \"blockchain/blockchain-functions/functions\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { RiShareForwardLine } from \"react-icons/ri\";\r\nimport { RiCoinsLine } from \"react-icons/ri\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { FaHandHoldingHeart } from \"react-icons/fa\";\r\nimport WalletButton from \"../../wallet-button/WalletButton\";\r\nimport \"./card.scss\";\r\n\r\nexport default function SimpleCard() {\r\n  const [TRVL, setTRVL] = useState(\"\");\r\n  const [TShare, setTShare] = useState({\r\n    balance: \"\",\r\n    staked: \"\",\r\n    interest: \"\",\r\n  });\r\n\r\n  const getTRVLbalance = async () => {\r\n    let result = await TRVLbalance();\r\n    if (result) {\r\n      setTRVL(result);\r\n    }\r\n  };\r\n\r\n  const getTShareBalance = async () => {\r\n    let result = await TShareBalance();\r\n    if (result) {\r\n      setTShare(result);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTRVLbalance();\r\n    getTShareBalance();\r\n  }, []);\r\n\r\n  return (\r\n    <Box className=\"main\">\r\n      <Grid container spacing={2} className=\"main_heading\">\r\n        <Grid item xs={12} sm={8}>\r\n          <Typography variant=\"h4\" component=\"h2\">\r\n            My Travel Assets Dasdhboard\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4}>\r\n          <WalletButton />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"red_paper\">\r\n            <Avatar>\r\n              <RiShareForwardLine />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">{TRVL}</Typography>\r\n              <Typography variant=\"caption\">Your TRVL Balance</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid maxHeight=\"100px\" style={{ height: \"100\" }} item xs={12} sm={3}>\r\n          <Paper className=\"red_paper\" style={{ height: \"100\" }}>\r\n            <Avatar>\r\n              <RiCoinsLine />\r\n            </Avatar>\r\n            <Box style={{ height: \"100\" }}>\r\n              <Typography variant=\"h6\">{TShare.balance}</Typography>\r\n              <Typography variant=\"caption\">Your T-shares</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"red_paper\">\r\n            <Avatar>\r\n              <FaHandHoldingHeart />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">{TShare.staked}</Typography>\r\n              <Typography variant=\"caption\">Your Staking Assets</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Paper className=\"yellow_paper\">\r\n            <Avatar>\r\n              <FiSettings />\r\n            </Avatar>\r\n            <Box>\r\n              <Typography variant=\"h6\">Setting</Typography>\r\n              <Typography variant=\"caption\">Account Settings</Typography>\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  uploadFile,\r\n  createMultiNFT,\r\n  saveToMoralis,\r\n} from \"blockchain/blockchain-functions/functions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./form.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Box from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function MultiNFT() {\r\n  const classes = useStyles();\r\n  const [NFTDetails, setNFTDetails] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    amount: \"\",\r\n    description: \"\",\r\n    tag: \"\",\r\n    external_url: \"\",\r\n    youtube_url: \"\",\r\n    type: \"\",\r\n    URI: \"\",\r\n    Hash: \"\",\r\n  });\r\n  const [fileUploaded, setFileUploaded] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const handleUpload = async (e) => {\r\n    setIsUploading(true);\r\n    try {\r\n      let result = await uploadFile(e.target.files[0]);\r\n      setFileUploaded(result);\r\n      setNFTDetails({\r\n        ...NFTDetails,\r\n        URI: result._ipfs,\r\n        Hash: result._hash,\r\n        type: result.type,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setIsUploading(false);\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    let result = await createMultiNFT(NFTDetails);\r\n    if (result?.events?.TransferSingle.returnValues.id) {\r\n      saveToMoralis(NFTDetails, result);\r\n    }\r\n  };\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Create Assets</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={4} className=\"img_column\">\r\n          <Box\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"300px\",\r\n              display: \"grid\",\r\n              placeItems: \"center\",\r\n            }}\r\n          >\r\n            {fileUploaded?.type.includes(\"image\") && (\r\n              <img\r\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                src={fileUploaded._ipfs}\r\n                alt={fileUploaded._ipfs}\r\n              />\r\n            )}\r\n\r\n            {(fileUploaded?.type.includes(\"video\") ||\r\n              fileUploaded?.type.includes(\"audio\")) && (\r\n              <video\r\n                style={{ \"max-width\": \"100%\", \"max-height\": \"100%\" }}\r\n                controls\r\n                src={fileUploaded._ipfs}\r\n              />\r\n            )}\r\n            {!fileUploaded && isUploading && <CircularProgress />}\r\n            {!fileUploaded && !isUploading && <h3>Upload Your File</h3>}\r\n          </Box>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"darkbtn\"\r\n          >\r\n            <label>\r\n              Upload\r\n              <input\r\n                onChange={(e) => handleUpload(e)}\r\n                type=\"file\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </label>\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <Grid container>\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Name\"\r\n                  value={NFTDetails.name}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, name: e.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Asset Location\"\r\n                  value={NFTDetails.location}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, location: e.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Amount of Tokens\"\r\n                  type=\"number\"\r\n                  value={NFTDetails.amount}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, amount: e.target.value })\r\n                  }\r\n                />\r\n\r\n                <TextareaAutosize\r\n                  aria-label=\"minimum height\"\r\n                  className=\"textarea_feild\"\r\n                  minRows={5}\r\n                  placeholder=\"Description and Comments\"\r\n                  value={NFTDetails.description}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({\r\n                      ...NFTDetails,\r\n                      description: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"External Link\"\r\n                  value={NFTDetails.external_url}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({\r\n                      ...NFTDetails,\r\n                      external_url: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Youtube Link\"\r\n                  value={NFTDetails.youtube_url}\r\n                  onChange={(e) =>\r\n                    setNFTDetails({\r\n                      ...NFTDetails,\r\n                      youtube_url: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </form>\r\n              <FormControl variant=\"outlined\" className=\"select_feild\">\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\"></InputLabel>\r\n                <Select\r\n                  native\r\n                  onChange={(e) =>\r\n                    setNFTDetails({ ...NFTDetails, tag: e.target.value })\r\n                  }\r\n                  inputProps={{}}\r\n                  defaultValue=\"Select Item Tag\"\r\n                >\r\n                  <option value=\"Select Item Tag\" disabled>\r\n                    Select Item Tag\r\n                  </option>\r\n                  <option key=\"accommodation\" value=\"accommodation\">\r\n                    Accommodation\r\n                  </option>\r\n                  <option key=\"experience\" value=\"experience\">\r\n                    Experience\r\n                  </option>\r\n                </Select>\r\n              </FormControl>\r\n              <br />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={handleCreate}\r\n              >\r\n                Create\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction NFTCard({ props }) {\r\n  const [NFTinfo, setNFTinfo] = useState({\r\n    URI: \"\",\r\n    description: \"\",\r\n    external_url: \"\",\r\n    location: \"\",\r\n    name: \"\",\r\n    tag: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 250,\r\n      height: 350,\r\n    },\r\n  });\r\n  const setInfo = () => {\r\n    const {\r\n      Hash,\r\n      NFTid,\r\n      URI,\r\n      description,\r\n      external_url,\r\n      location,\r\n      name,\r\n      tag,\r\n      type,\r\n      youtube_url,\r\n    } = props.attributes;\r\n    setNFTinfo({\r\n      Hash,\r\n      NFTid,\r\n      URI,\r\n      description,\r\n      external_url,\r\n      location,\r\n      name,\r\n      tag,\r\n      type,\r\n      youtube_url,\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    setInfo();\r\n    // eslint-disable-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Grid item xs={12} lg={3} className=\"img_column_market\">\r\n      <Card className={classes.root} width=\"250\">\r\n        <CardActionArea>\r\n          <Link\r\n            to={{\r\n              pathname: `/sell/${NFTinfo.NFTid}`,\r\n            }}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <CardMedia\r\n              component={\"img\"}\r\n              alt=\"Contemplative Reptile\"\r\n              style={{ objectFit: \"contain\" }}\r\n              // height=\"230\"\r\n              image={NFTinfo?.URI}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h5\">\r\n                {NFTinfo?.name}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" variant=\"h5\" component=\"h5\">\r\n                {NFTinfo?.location}\r\n              </Typography>\r\n            </CardContent>\r\n          </Link>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NFTCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getNFTBalance,\r\n  NFTInfo,\r\n  getAllowance,\r\n} from \"../../blockchain/blockchain-functions/functions\";\r\nimport NFTCard from \"./components/NFTCard\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Dashboard() {\r\n  const [NFT, setNFT] = useState([]);\r\n\r\n  const getNFT = async (i) => {\r\n    try {\r\n      let NFTBalance = await getNFTBalance();\r\n\r\n      setNFT(NFTBalance);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNFT();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n      <Typography variant=\"h4\" component=\"h2\" className=\"main_heading\">\r\n        My Accomodations\r\n      </Typography>\r\n      <Grid container direction=\"row\" spacing={3}>\r\n        {NFT !== undefined && NFT.length !== 0 ? (\r\n          NFT.map((nft) => {\r\n            return <NFTCard key={nft.id} props={nft} />;\r\n          })\r\n        ) : (\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            No Items Available\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import Marketplace, { MarketplaceAddress } from \"../interface/Marketplace\";\r\nimport NFT1155, { ERC1155Address } from \"../interface/NFT1155\";\r\nimport TRVL from \"../interface/TRVL\";\r\nimport web3 from \"../interface/web3\";\r\n\r\nconst Moralis = require(\"moralis\");\r\nMoralis.initialize(\"9jTSEy7eKGdH8EBCOvH5zCYM01TxksUQcItcbfQg\");\r\nMoralis.serverURL = \"https://dzfl3tiplyqt.usemoralis.com:2053/server\";\r\nconst Token = Moralis.Object.extend(\"Token\");\r\nexport let currentUser = Moralis.User.current();\r\n\r\nexport const getMarketNFTBalance = async () => {\r\n  try {\r\n    const options = {\r\n      chain: \"bsc testnet\",\r\n      address: MarketplaceAddress,\r\n      // token_address: \"0xc53a9e77fe53be4f09c5fb13ebbb8bae125348cb\",\r\n    };\r\n    // const BscNFT2 = await Moralis.Web3API.account.getNFTsForContract(options);\r\n    const BscNFT2 = await Moralis.Web3.getNFTs(options);\r\n    console.log(BscNFT2);\r\n    let ids = [];\r\n    await BscNFT2.map((nft) => {\r\n      if (nft.token_address.toUpperCase() === ERC1155Address.toUpperCase()) {\r\n        ids.push(nft.token_id);\r\n      }\r\n      return nft;\r\n    });\r\n    const query = new Moralis.Query(Token);\r\n    query.containedIn(\"NFTid\", ids);\r\n    const response = await query.find();\r\n\r\n    console.log(response);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getIds = async (token_id) => {\r\n  let instance = await Marketplace();\r\n\r\n  try {\r\n    let ids = await instance.methods\r\n      .getSellers(ERC1155Address, token_id)\r\n      .call();\r\n\r\n    return ids[0];\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getOrders = async (id) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let order = await instance.methods.orderById(id).call();\r\n    return order;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getBids = async (_nftId, orderId) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let result = await instance.methods\r\n      .bidByOrderId(\r\n        \"0xc53A9e77Fe53BE4f09c5FB13EBBB8bAe125348cb\",\r\n        _nftId,\r\n        orderId\r\n      )\r\n      .call();\r\n    console.log(result, \"getBids\");\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error, \"getBids\");\r\n  }\r\n};\r\n\r\nexport const placeBid = async (_assetId, _amount, _priceInWei, _orderId) => {\r\n  let instance = await Marketplace();\r\n  let _price = web3.utils.toWei(_priceInWei);\r\n  try {\r\n    let receipt = await instance.methods\r\n      .safePlaceBid(ERC1155Address, _assetId, _amount, _price, _orderId)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return receipt;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateOrder = async (_asetId, _priceInWei, _orderId) => {\r\n  let instance = await Marketplace();\r\n  let _price = web3.utils.toWei(_priceInWei);\r\n  try {\r\n    let receipt = await instance.methods\r\n      .updateOrder(ERC1155Address, _asetId, _price, _orderId)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return receipt;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const cancelOrder = async (_assetId, _orderId, _sellerAddress) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let sellersIndex = await getSellersIndex(_assetId, _orderId);\r\n    let sellerIndex = await getSellerIndex(_sellerAddress, _orderId);\r\n\r\n    let receipt = instance.methods\r\n      .cancelOrder(\r\n        ERC1155Address,\r\n        _assetId,\r\n        _orderId,\r\n        sellersIndex,\r\n        sellerIndex\r\n      )\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return receipt;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const buyAsset = async (\r\n  _assetId,\r\n  _amount,\r\n  _priceInWei,\r\n  _orderId,\r\n  _sellerAddress\r\n) => {\r\n  let instance = await Marketplace();\r\n\r\n  try {\r\n    let _sellersIndex = await getSellersIndex(_assetId, _orderId);\r\n    let _sellerIndex = await getSellerIndex(_sellerAddress, _orderId);\r\n\r\n    let receipt = await instance.methods\r\n      .safeExecuteOrder(\r\n        ERC1155Address,\r\n        _assetId,\r\n        _amount,\r\n        _priceInWei,\r\n        _orderId,\r\n        _sellersIndex,\r\n        _sellerIndex\r\n      )\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return receipt;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const takeBid = async (\r\n  ERC1155Address,\r\n  _assetId,\r\n  _priceInWei,\r\n  _orderId,\r\n  _sellerAddress\r\n) => {\r\n  let instance = await Marketplace();\r\n\r\n  try {\r\n    let _sellersIndex = await getSellersIndex(_assetId, _orderId);\r\n    let _sellerIndex = await getSellerIndex(_sellerAddress, _orderId);\r\n\r\n    let receipt = await instance.methods\r\n      .acceptBid(\r\n        ERC1155Address,\r\n        _assetId,\r\n        _priceInWei,\r\n        _orderId,\r\n        _sellersIndex,\r\n        _sellerIndex\r\n      )\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return receipt;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const cancelBid = async (_assetId, _orderId) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let receipt = await instance.methods\r\n      .cancelBid(ERC1155Address, _assetId, _orderId)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return receipt;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const isApprovedNFT1155 = async () => {\r\n  let instance = await NFT1155();\r\n  try {\r\n    if (window.ethereum.selectedAddress) {\r\n      let result = await instance.methods\r\n        .isApprovedForAll(window.ethereum.selectedAddress, MarketplaceAddress)\r\n        .call();\r\n      return result;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const approveNFT1155 = async () => {\r\n  let instance = await NFT1155();\r\n  try {\r\n    let result = await instance.methods\r\n      .setApprovalForAll(MarketplaceAddress, true)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const isApprovedCoin = async () => {\r\n  let instance = await TRVL();\r\n  try {\r\n    let result = instance.methods\r\n      .allowance(window.ethereum.selectedAddress, MarketplaceAddress)\r\n      .call();\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const approveCoin = async () => {\r\n  let instance = await TRVL();\r\n  let _amount = web3.utils.toWei(\"10000\");\r\n  try {\r\n    let result = await instance.methods\r\n      .approve(MarketplaceAddress, _amount)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getTRVLPrice = async (_price) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let receipt = await instance.methods.getTrvlPrice(`${_price}`).call();\r\n    return receipt;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getNFTinfo = async (id) => {\r\n  try {\r\n    const query = new Moralis.Query(Token);\r\n    query.equalTo(\"NFTid\", id);\r\n    const response = await query.first();\r\n\r\n    console.log(response);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateUsdConversion = async (_newUsdConversion, _decimals) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let receipt = await instance.methods\r\n      .changeUsdConversion(_newUsdConversion, _decimals)\r\n      .send({ from: window.ethereum.selectedAddress });\r\n    return receipt;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst getSellerIndex = async (_sellerAddress, _orderId) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let orders = await instance.methods.getOrdersId(_sellerAddress).call();\r\n    console.log(orders, \"seller\");\r\n    return orders[0].findIndex((order) => order === _orderId);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst getSellersIndex = async (_assetId, _orderId) => {\r\n  let instance = await Marketplace();\r\n  try {\r\n    let orders = await instance.methods\r\n      .getSellers(ERC1155Address, _assetId)\r\n      .call();\r\n    console.log(orders);\r\n    return orders[0].findIndex((order) => order === _orderId);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  getNFTBalance,\r\n  createOrder,\r\n  getAmount,\r\n} from \"blockchain/blockchain-functions/functions\";\r\nimport {\r\n  approveNFT1155,\r\n  isApprovedNFT1155,\r\n  getTRVLPrice,\r\n} from \"blockchain/blockchain-functions/marketFunctions\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Box from \"@material-ui/core/Container\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function SellPage(props) {\r\n  const classes = useStyles();\r\n  let { id } = useParams();\r\n  const [isApproved, setIsApproved] = useState(false);\r\n  const [amountToSell, setAmountToSell] = useState(1);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [balanceNFT, setBalanceNFT] = useState([]);\r\n  const [trvlAmount, setTrvlAmount] = useState(\"\");\r\n  const [usdAmount, setUsdAmount] = useState(\"\");\r\n  const [NFTinfo, setNFTinfo] = useState({\r\n    NFTid: \"\",\r\n    URI: \"\",\r\n    description: \"\",\r\n    external_url: \"\",\r\n    location: \"\",\r\n    name: \"\",\r\n    type: \"\",\r\n    youtube_url: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const getNFTs = async () => {\r\n    const balance = await getNFTBalance();\r\n    if (id) {\r\n      let selectedNFT = balance.find((nft) => nft.attributes.NFTid === id);\r\n      let amount = await getAmount(id);\r\n      setNFTinfo({ ...selectedNFT.attributes, amount });\r\n    }\r\n    setBalanceNFT(balance);\r\n  };\r\n\r\n  const getSelectedNFT = async (_id) => {\r\n    let selectedNFT = balanceNFT.find((nft) => nft.attributes.NFTid === _id);\r\n    let amount = await getAmount(_id);\r\n    setNFTinfo({ ...selectedNFT.attributes, amount });\r\n  };\r\n\r\n  const handleSelectChange = async (_id) => {\r\n    setIsLoading(true);\r\n    getSelectedNFT(_id);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleAmountChange = (num) => {\r\n    let amount = NFTinfo.amount;\r\n    if (Number(num) > amount) {\r\n      setAmountToSell(amount);\r\n    } else if (Number(num) < 0) {\r\n      setAmountToSell(0);\r\n    } else {\r\n      setAmountToSell(num);\r\n    }\r\n  };\r\n\r\n  const checkApproval = async () => {\r\n    let result = await isApprovedNFT1155();\r\n    setIsApproved(result);\r\n  };\r\n\r\n  const checkConvertionRate = async (value) => {\r\n    let result = await getTRVLPrice(value);\r\n    setTrvlAmount(result);\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    let result = await createOrder(NFTinfo.NFTid, amountToSell, price);\r\n    console.log(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNFTs();\r\n    checkApproval();\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Trade Travel Assets</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={4} className=\"img_column\">\r\n          <Typography variant=\"h5\">\r\n            {`${NFTinfo.location} - ${NFTinfo.name}`}\r\n          </Typography>\r\n          <Box\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"300px\",\r\n              display: \"grid\",\r\n              placeItems: \"center\",\r\n            }}\r\n          >\r\n            {NFTinfo.URI === \"\" && (\r\n              <Typography variant=\"h6\">Select an Asset to Sell</Typography>\r\n            )}\r\n            {isLoading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <img\r\n                style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                src={NFTinfo.URI}\r\n                alt={NFTinfo.URI}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <Grid container>\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <FormControl variant=\"outlined\" className=\"select_feild\">\r\n                  <InputLabel htmlFor=\"outlined-age-native-simple\"></InputLabel>\r\n                  <Select\r\n                    native\r\n                    onChange={(e) => handleSelectChange(e.target.value)}\r\n                    defaultValue=\"Select Asset to sell\"\r\n                  >\r\n                    <option value=\"Select Asset to sell\" disabled>\r\n                      Select Asset to sell\r\n                    </option>\r\n                    {balanceNFT.map((nft) => {\r\n                      return (\r\n                        <option\r\n                          as=\"Link\"\r\n                          key={nft.id}\r\n                          value={nft.attributes.NFTid}\r\n                          to={{\r\n                            pathname: `/sell/${nft.attributes.NFTid}`,\r\n                          }}\r\n                        >\r\n                          {nft.attributes.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  fullWidth\r\n                  style={{ marginBottom: \"15px\" }}\r\n                  value={`Units available to sell: ${NFTinfo.amount}`}\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Price Per Unit for Sale Now in TRVL\"\r\n                />\r\n\r\n                <TextField\r\n                  fullWidth\r\n                  value={amountToSell}\r\n                  onChange={(e) => handleAmountChange(e.target.value)}\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Amount to Sell\"\r\n                />\r\n                <TextField\r\n                  fullWidth\r\n                  value={price}\r\n                  type=\"number\"\r\n                  onChange={(e) => {\r\n                    setPrice(e.target.value);\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Price Per Unit in USD\"\r\n                />\r\n                <TextareaAutosize\r\n                  aria-label=\"minimum height\"\r\n                  className=\"textarea_feild\"\r\n                  value={NFTinfo.description}\r\n                  placeholder=\"Description and Comments\"\r\n                />\r\n              </form>\r\n\r\n              {isApproved ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  className=\"darkbtn\"\r\n                  onClick={handleCreate}\r\n                >\r\n                  SUBMIT FOR SALE\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  color=\"primary\"\r\n                  className=\"darkbtn\"\r\n                  onClick={approveNFT1155}\r\n                >\r\n                  APPROVE\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid xs={12} lg={6} className=\"column\">\r\n              <Typography variant=\"h5\">USD to TRVL Calculator</Typography>\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  fullWidth\r\n                  value={usdAmount}\r\n                  type=\"number\"\r\n                  onChange={(e) => setUsdAmount(e.target.value)}\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Amount in USD\"\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  fullWidth\r\n                  value={trvlAmount}\r\n                  disabled\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Amount in TRVL\"\r\n                />\r\n              </form>\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={() => checkConvertionRate(usdAmount)}\r\n              >\r\n                Check Convertion Rate\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getIds,\r\n  getTRVLPrice,\r\n} from \"blockchain/blockchain-functions/marketFunctions\";\r\nimport { getOrders } from \"blockchain/blockchain-functions/functions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction NFTcard({ props }) {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    NFTid,\r\n    URI,\r\n    description,\r\n    external_url,\r\n    location,\r\n    name,\r\n    tag,\r\n    type,\r\n    youtube_url,\r\n  } = props;\r\n  const [bestPrice, setBestPrice] = useState({});\r\n  const [orders, setOrders] = useState([]);\r\n  const [ordersIds, setOrdersIds] = useState();\r\n  const [TRVLprice, setTRVLprice] = useState(\"\");\r\n\r\n  const Ids = async () => {\r\n    let ids = await getIds(NFTid);\r\n    setOrdersIds(ids);\r\n  };\r\n\r\n  const getOrder = async () => {\r\n    if (ordersIds) {\r\n      let result = [];\r\n      for (let i = 0; i < ordersIds.length; i++) {\r\n        result.push(await getOrders(ordersIds[i]));\r\n      }\r\n      setOrders(result);\r\n    }\r\n  };\r\n\r\n  const getMinimumPrice = () => {\r\n    let best = { price: 0 };\r\n    for (let i = 0; i < orders.length; i++) {\r\n      let order = orders[i];\r\n      if (best.price === 0) {\r\n        best = order;\r\n      } else if (best.price > order.price) {\r\n        best = order;\r\n      }\r\n    }\r\n    setBestPrice(best);\r\n    getBestTRVLprice(best.price);\r\n  };\r\n\r\n  const getBestTRVLprice = async (_price) => {\r\n    let TrvlPrice = await getTRVLPrice(_price);\r\n    setTRVLprice(TrvlPrice);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrder();\r\n  }, [ordersIds]);\r\n\r\n  useEffect(() => {\r\n    getMinimumPrice();\r\n  }, [orders]);\r\n\r\n  useEffect(() => {\r\n    Ids();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid item xs={12} lg={3} className=\"img_column_market\">\r\n      <Card className={classes.root}>\r\n        <Link\r\n          to={{\r\n            pathname: `/assetsell/${NFTid}`,\r\n          }}\r\n        >\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"Contemplative Reptile\"\r\n              style={{ \"object-fit\": \"contain\" }}\r\n              image={URI}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\">\r\n                {name}\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                {(bestPrice?.price / 1e18).toFixed(2)} USD\r\n              </Typography>\r\n              {TRVLprice && (\r\n                <Typography variant=\"h6\">\r\n                  {(TRVLprice / 1e18).toFixed(2)} TRVL\r\n                </Typography>\r\n              )}\r\n              <Typography variant=\"h6\">\r\n                There is {orders.length} offers available{\" \"}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Link>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default NFTcard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getMarketNFTBalance } from \"blockchain/blockchain-functions/marketFunctions\";\r\nimport NFTcard from \"./components/card\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./form.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n  const classes = useStyles();\r\n  const [filter, setFilter] = useState(\"all\");\r\n  const [marketNFTbalance, setMarketNFTbalance] = useState([]);\r\n  const [alignment, setAlignment] = React.useState(\"left\");\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const getMarketNFTs = async () => {\r\n    let result = await getMarketNFTBalance();\r\n\r\n    setMarketNFTbalance(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMarketNFTs();\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={6} className=\"img_column\">\r\n          <Typography variant=\"h5\">Trade Travel Assets</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} lg={6} className=\"input_btn\">\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Search Location\"\r\n            />\r\n            <button className=\"connect_wallect text-center\">Search</button>\r\n          </form>\r\n        </Grid>\r\n\r\n        <Grid xs={12} lg={12} className=\"btns\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"outlined_btn\"\r\n            onClick={() => setFilter(\"all\")}\r\n          >\r\n            All\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"outlined_btn\"\r\n            onClick={() => setFilter(\"accommodation\")}\r\n          >\r\n            Accommodations\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            className=\"outlined_btn\"\r\n            onClick={() => setFilter(\"experience\")}\r\n          >\r\n            Experiences\r\n          </Button>\r\n          <ToggleButtonGroup\r\n            value={alignment}\r\n            exclusive\r\n            onChange={handleAlignment}\r\n            aria-label=\"text alignment\"\r\n          >\r\n            <ToggleButton value=\"left\" aria-label=\"left aligned\" className=\"bb\">\r\n              Buy\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value=\"justify\"\r\n              aria-label=\"justified\"\r\n              className=\"bbb\"\r\n            >\r\n              Trade\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Grid>\r\n\r\n        {marketNFTbalance?.map((nft) => {\r\n          if (filter === \"all\" || nft.attributes.tag === filter) {\r\n            return (\r\n              <NFTcard key={nft.attributes.NFTid} props={nft.attributes} />\r\n            );\r\n          }\r\n        })}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./youtubeStyle.css\";\r\nvar getYouTubeID = require(\"get-youtube-id\");\r\n\r\nconst YoutubeEmbed = ({ embedId }) => {\r\n  const _id = getYouTubeID(embedId);\r\n  return (\r\n    <div className=\"video-responsive\">\r\n      <iframe\r\n        width=\"853\"\r\n        height=\"480\"\r\n        src={`https://www.youtube.com/embed/${_id}`}\r\n        frameBorder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen\r\n        title=\"Embedded youtube\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nYoutubeEmbed.propTypes = {\r\n  embedId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default YoutubeEmbed;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBids,\r\n  placeBid,\r\n  takeBid,\r\n  cancelBid,\r\n} from \"blockchain/blockchain-functions/marketFunctions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"../form.scss\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs({ props }) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const [NFTdata, setNFTdata] = useState({\r\n    NFTid: \"\",\r\n    orderId: \"\",\r\n    description: \"\",\r\n    seller: \"\",\r\n  });\r\n  const [bid, setBid] = useState({\r\n    id: \"\",\r\n    bidder: \"\",\r\n    amount: \"\",\r\n    price: \"\",\r\n  });\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const getBid = async () => {\r\n    let newBid = await getBids(NFTdata.NFTid, NFTdata.orderId);\r\n    if (newBid) {\r\n      setBid(newBid);\r\n      console.log(newBid);\r\n    }\r\n  };\r\n\r\n  const handlePlaceBid = async () => {\r\n    let receipt = await placeBid(NFTdata.NFTid, amount, price, NFTdata.orderId);\r\n    console.log(receipt);\r\n  };\r\n\r\n  const handleAcceptBid = async () => {\r\n    let receipt = await takeBid(\r\n      NFTdata.NFTid,\r\n      bid.price,\r\n      NFTdata.orderId,\r\n      NFTdata.seller\r\n    );\r\n    console.log(receipt);\r\n  };\r\n\r\n  const handleCancelBid = async () => {\r\n    let receipt = await cancelBid(NFTdata.NFTid, NFTdata.orderId);\r\n    console.log(receipt);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props) {\r\n      setNFTdata(props);\r\n    }\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Information\" {...a11yProps(0)} />\r\n          <Tab label=\"Bids\" {...a11yProps(1)} onClick={() => getBid()} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Typography varient=\"h5\" className=\"description\">\r\n          Description:\r\n        </Typography>\r\n        <Typography varient=\"h5\" align=\"center\" className=\"description_item\">\r\n          {NFTdata.description}\r\n        </Typography>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        {bid.amount !== \"0\" ? (\r\n          <Typography varient=\"h3\" className=\"description_pera\">\r\n            The current Bid is paying {bid?.price / 1e18} for {bid?.amount}{\" \"}\r\n            assets.\r\n          </Typography>\r\n        ) : (\r\n          <Typography varient=\"h3\" className=\"description_pera\">\r\n            There is no Bids at this moment, you can place one!\r\n          </Typography>\r\n        )}\r\n        <br />\r\n        <TextField\r\n          fullWidth\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          className=\"text_feild\"\r\n          placeholder=\"Price for Asset\"\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          type=\"number\"\r\n          variant=\"outlined\"\r\n          className=\"text_feild\"\r\n          placeholder=\"Amount of Assets\"\r\n        />\r\n        {NFTdata?.seller?.toUpperCase() ===\r\n        window.ethereum?.selectedAddress?.toUpperCase() ? (\r\n          <button className=\"connect_wallet\" onClick={handleAcceptBid}>\r\n            Accept Bid\r\n          </button>\r\n        ) : bid?.bidder?.toUpperCase() ===\r\n          window.ethereum?.selectedAddress?.toUpperCase() ? (\r\n          <button className=\"connect_wallet\" onClick={handleCancelBid}>\r\n            Cancel Bid\r\n          </button>\r\n        ) : (\r\n          <button className=\"connect_wallet\" onClick={handlePlaceBid}>\r\n            Place a Bid\r\n          </button>\r\n        )}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  cancelOrder,\r\n  updateOrder,\r\n  buyAsset,\r\n  getIds,\r\n  getOrders,\r\n  isApprovedCoin,\r\n  approveCoin,\r\n  getTRVLPrice,\r\n  getNFTinfo,\r\n} from \"blockchain/blockchain-functions/marketFunctions\";\r\nimport YoutubeEmbed from \"./components/youtubeEmbed\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./form.scss\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { MdFavorite } from \"react-icons/md\";\r\nimport { IoIosShareAlt } from \"react-icons/io\";\r\nimport AssetSellTab from \"./components/AssetSellTab\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\n\r\nexport default function CenteredGrid() {\r\n  let { id } = useParams();\r\n  const [media, setMedia] = useState(0);\r\n  const [isApproved, setIsApproved] = useState();\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [newPrice, setNewPrice] = useState(\"\");\r\n  const [trvlPrice, setTrvlPrice] = useState(\"\");\r\n  const [ordersDetails, setOrdersDetails] = useState({\r\n    bestPrice: {\r\n      orderId: \"\",\r\n      amount: \"\",\r\n      price: \"\",\r\n      seller: \"\",\r\n    },\r\n    orders: [],\r\n  });\r\n  const [NFTinfo, setNFTinfo] = useState({\r\n    NFTid: \"\",\r\n    URI: \"\",\r\n    description: \"\",\r\n    external_url: \"\",\r\n    location: \"\",\r\n    name: \"\",\r\n    type: \"\",\r\n    youtube_url: \"\",\r\n    amount: \"\",\r\n  });\r\n\r\n  const handleOrderChange = (event) => {\r\n    let index = event.target.value;\r\n    setOrdersDetails({\r\n      ...ordersDetails,\r\n      bestPrice: ordersDetails.orders[index],\r\n    });\r\n  };\r\n\r\n  const handleAmountChange = (num) => {\r\n    let amount = ordersDetails.bestPrice.amount;\r\n    if (Number(num) > amount) {\r\n      setAmount(amount);\r\n    } else if (Number(num) < 0) {\r\n      setAmount(0);\r\n    } else {\r\n      setAmount(num);\r\n    }\r\n  };\r\n\r\n  const handleCancelOrder = async () => {\r\n    let receipt = await cancelOrder(\r\n      NFTinfo.NFTid,\r\n      ordersDetails.bestPrice.orderId,\r\n      ordersDetails.bestPrice.seller\r\n    );\r\n    console.log(receipt);\r\n  };\r\n\r\n  const handleUpdateOrder = async () => {\r\n    let receipt = await updateOrder(\r\n      NFTinfo.NFTid,\r\n      newPrice,\r\n      ordersDetails.bestPrice.orderId\r\n    );\r\n    console.log(receipt);\r\n  };\r\n\r\n  const handleBuy = async () => {\r\n    let receipt = await buyAsset(\r\n      NFTinfo.NFTid,\r\n      amount,\r\n      ordersDetails.bestPrice.price,\r\n      ordersDetails.bestPrice.orderId,\r\n      ordersDetails.bestPrice.seller\r\n    );\r\n    console.log(receipt);\r\n  };\r\n\r\n  const getInfo = async () => {\r\n    const nftInfo = await getNFTinfo(id);\r\n    setNFTinfo({ ...NFTinfo, ...nftInfo.attributes });\r\n  };\r\n\r\n  const getData = async () => {\r\n    let ordersIds = await getIds(id);\r\n    let result = [];\r\n\r\n    for (let i = 0; i < ordersIds.length; i++) {\r\n      result.push(await getOrders(ordersIds[i]));\r\n    }\r\n\r\n    let best = { price: 0 };\r\n    for (let i = 0; i < result.length; i++) {\r\n      let order = result[i];\r\n      if (best.price === 0) {\r\n        best = order;\r\n      } else if (best.price > order.price) {\r\n        best = order;\r\n      }\r\n    }\r\n    console.log(\"order\", best.orderId);\r\n\r\n    setOrdersDetails({\r\n      bestPrice: best,\r\n      orders: result,\r\n    });\r\n  };\r\n\r\n  const getBestTRVLprice = async () => {\r\n    if (ordersDetails.bestPrice.price) {\r\n      let TrvlPrice = await getTRVLPrice(ordersDetails.bestPrice.price);\r\n      setTrvlPrice(TrvlPrice);\r\n    }\r\n  };\r\n\r\n  const checkTokenApproval = async () => {\r\n    let result = await isApprovedCoin();\r\n\r\n    if (result < 10000000000000) {\r\n      setIsApproved(false);\r\n    } else if (result > 10000000000000) {\r\n      setIsApproved(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n    getData();\r\n    checkTokenApproval();\r\n    // eslint-disable-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBestTRVLprice();\r\n  }, [ordersDetails.bestPrice]);\r\n\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Typography variant=\"h5\">Asset Buy Page</Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} lg={6} className=\"img_column\">\r\n          <BottomNavigation\r\n            onChange={(event, newValue) => {\r\n              setMedia(newValue);\r\n            }}\r\n            showLabels\r\n          >\r\n            <BottomNavigationAction label=\"Image\" icon={<ImageIcon />} />\r\n            <BottomNavigationAction label=\"Video\" icon={<YouTubeIcon />} />\r\n          </BottomNavigation>\r\n          {media === 0 && (\r\n            <img\r\n              style={{ maxWidth: \"90%\", \"max-height\": \"90%\" }}\r\n              src={NFTinfo.URI}\r\n              alt={NFTinfo.name}\r\n            />\r\n          )}\r\n          {media === 1 && <YoutubeEmbed embedId={NFTinfo.youtube_url} />}\r\n        </Grid>\r\n        <Grid item xs={12} lg={6} className=\"column\">\r\n          <Box className=\"heading_btn\">\r\n            <Typography variant=\"h6\">{NFTinfo.name}</Typography>\r\n            <Typography variant=\"h6\">{NFTinfo.location}</Typography>\r\n            <Typography variant=\"h6\">\r\n              USD {(ordersDetails.bestPrice?.price / 1e18).toFixed(2)}{\" \"}\r\n            </Typography>\r\n            {trvlPrice && (\r\n              <Typography variant=\"h6\">\r\n                TRVL {(trvlPrice / 1e18).toFixed(2)}{\" \"}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          <Box className=\"highlight_text\">\r\n            <Typography varient=\"p\">\r\n              <FaUser /> There is {ordersDetails.bestPrice.amount} Available\r\n            </Typography>\r\n          </Box>\r\n          <Box className=\"heading_button\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className=\"outlined_btn\"\r\n              startIcon={<MdFavorite />}\r\n            >\r\n              Like 1\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className=\"outlined_btn\"\r\n              startIcon={<IoIosShareAlt />}\r\n            >\r\n              Share\r\n            </Button>\r\n          </Box>\r\n\r\n          <AssetSellTab\r\n            props={{\r\n              token_id: NFTinfo.NFTid,\r\n              orderId: ordersDetails.bestPrice.orderId,\r\n              description: NFTinfo.description,\r\n              seller: ordersDetails.bestPrice.seller,\r\n            }}\r\n          />\r\n          <Typography variant=\"h5\" className=\"properties\">\r\n            Link to the Property:\r\n          </Typography>\r\n          <a href={NFTinfo.external_url} rel=\"noreferrer\" target=\"_blank\">\r\n            <Typography variant=\"h6\">{NFTinfo.external_url}</Typography>\r\n          </a>\r\n          <Typography variant=\"h5\" className=\"properties\">\r\n            Properties:\r\n          </Typography>\r\n          <Box className=\"selectFeilds\">\r\n            <FormControl variant=\"outlined\" className=\"selectfeild\">\r\n              <Select\r\n                native\r\n                onChange={handleOrderChange}\r\n                defaultValue=\"Other Offers\"\r\n              >\r\n                <option value=\"Other Offers\" disabled>\r\n                  Other Offers\r\n                </option>\r\n                {ordersDetails.orders?.length !== 0 &&\r\n                  ordersDetails.orders.map((order, index) => {\r\n                    return (\r\n                      <option key={index} value={index}>\r\n                        TRVL {order?.price / 1e18}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" className=\"selectfeild\">\r\n              <TextField\r\n                fullWidth\r\n                value={amount}\r\n                onChange={(e) => handleAmountChange(e.target.value)}\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                className=\"text_feild\"\r\n                placeholder=\"Amount of Assets\"\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n\r\n          {ordersDetails?.bestPrice?.seller?.toUpperCase() ===\r\n          window.ethereum?.selectedAddress?.toUpperCase() ? (\r\n            <div>\r\n              <FormControl variant=\"outlined\" className=\"selectfeild\">\r\n                <TextField\r\n                  fullWidth\r\n                  value={newPrice}\r\n                  onChange={(e) => setNewPrice(e.target.value)}\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  className=\"text_feild\"\r\n                  placeholder=\"Update Price of this Asset\"\r\n                />\r\n              </FormControl>\r\n              <button className=\"connect_wallet\" onClick={handleUpdateOrder}>\r\n                Update Order\r\n              </button>\r\n              <button className=\"connect_wallet\" onClick={handleCancelOrder}>\r\n                Cancel Order\r\n              </button>\r\n            </div>\r\n          ) : isApproved ? (\r\n            <button className=\"connect_wallet\" onClick={handleBuy}>\r\n              Buy\r\n            </button>\r\n          ) : (\r\n            <button className=\"connect_wallet\" onClick={approveCoin}>\r\n              Approve\r\n            </button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  isApprovedCoin,\r\n  approveCoin,\r\n} from \"blockchain/blockchain-functions/marketFunctions\";\r\nimport {\r\n  BuyToken,\r\n  withdrawStake,\r\n  stakeTRVL,\r\n  approveCoinStake,\r\n  isApprovedCoinStake,\r\n  TShareInterest,\r\n  collectEarnings,\r\n} from \"blockchain/blockchain-functions/functions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./form.scss\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [stake, setStake] = useState(\"\");\r\n\r\n  const [isApproved, setIsApproved] = useState();\r\n  const [isApprovedStake, setIsApprovedStake] = useState();\r\n\r\n  const checkTokenApproval = async () => {\r\n    let result = await isApprovedCoin();\r\n\r\n    if (result < 10000000000000) {\r\n      setIsApproved(false);\r\n    } else if (result > 10000000000000) {\r\n      setIsApproved(true);\r\n    }\r\n  };\r\n  const checkStakeApproval = async () => {\r\n    let result = await isApprovedCoinStake();\r\n\r\n    if (result < 10000000000000) {\r\n      setIsApprovedStake(false);\r\n    } else if (result > 10000000000000) {\r\n      setIsApprovedStake(true);\r\n    }\r\n  };\r\n\r\n  const withdrawInterests = async () => {\r\n    let receipt = await collectEarnings();\r\n    console.log(receipt);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkTokenApproval();\r\n    checkStakeApproval();\r\n  }, []);\r\n\r\n  return (\r\n    <Paper className=\"form_content\">\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        spacing={3}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box className={classes.root} style={{ width: \"400px\" }}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              BNB to TRVL\r\n            </Typography>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount in BNB\"\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount in TRVL\"\r\n            />\r\n          </CardContent>\r\n\r\n          <CardActions>\r\n            {isApproved ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                CONVERT\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                style={{ width: \"100%\" }}\r\n                onClick={approveCoin}\r\n              >\r\n                APPROVE\r\n              </Button>\r\n            )}\r\n          </CardActions>\r\n        </Box>\r\n\r\n        <Box className={classes.root} style={{ width: \"400px\" }}>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              TRVL to BNB\r\n            </Typography>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount in BNB\"\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount in TRVL\"\r\n            />\r\n          </CardContent>\r\n\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              className=\"darkbtn\"\r\n              style={{ width: \"100%\" }}\r\n              onClick={() => BuyToken(amount)}\r\n            >\r\n              Buy\r\n            </Button>\r\n          </CardActions>\r\n        </Box>\r\n\r\n        <Box className={classes.root} style={{ width: \"400px\" }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\">Stake Your TRVL</Typography>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={stake}\r\n              onChange={(e) => setStake(e.target.value)}\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount To Stake\"\r\n            />\r\n          </CardContent>\r\n          <CardActions>\r\n            {isApprovedStake ? (\r\n              <>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  className=\"darkbtn\"\r\n                  style={{ width: \"100%\" }}\r\n                  onClick={() => stakeTRVL(stake)}\r\n                >\r\n                  STAKE\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  className=\"darkbtn\"\r\n                  style={{ width: \"100%\" }}\r\n                  onClick={() => withdrawStake()}\r\n                >\r\n                  WITHDRAW\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                style={{ width: \"100%\" }}\r\n                onClick={approveCoinStake}\r\n              >\r\n                APPROVE\r\n              </Button>\r\n            )}\r\n          </CardActions>\r\n        </Box>\r\n\r\n        <Box className={classes.root} style={{ width: \"400px\" }}>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              className=\"darkbtn\"\r\n              style={{ width: \"100%\" }}\r\n              onClick={() => withdrawInterests()}\r\n            >\r\n              Collect Your Rewards\r\n            </Button>\r\n          </CardActions>\r\n        </Box>\r\n      </Grid>\r\n      {/* <Typography variant=\"h5\">Trade TRVL to BNB</Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid xs={12} lg={6} className=\"column\">\r\n          <Typography variant=\"h6\">BNB to TRVL</Typography>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount in BNB\"\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount in TRVL\"\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              className=\"darkbtn\"\r\n              onClick={() => BuyToken(amount)}\r\n            >\r\n              BUY\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid xs={12} lg={6} className=\"column\">\r\n          <Typography variant=\"h6\">TRVL to BNB</Typography>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount in TRVL\"\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount in BNB\"\r\n            />\r\n            {isApproved ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n              >\r\n                CONVERT\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={approveCoin}\r\n              >\r\n                APPROVE\r\n              </Button>\r\n            )}\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={3}>\r\n        <Grid xs={12} lg={6} className=\"column\">\r\n          <Typography variant=\"h6\">Stake Your TRVL</Typography>\r\n\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={stake}\r\n              onChange={(e) => setStake(e.target.value)}\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount To Stake\"\r\n            />\r\n\r\n            {isApprovedStake ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={() => stakeTRVL(stake)}\r\n              >\r\n                STAKE\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                color=\"primary\"\r\n                className=\"darkbtn\"\r\n                onClick={approveCoinStake}\r\n              >\r\n                APPROVE\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              className=\"darkbtn\"\r\n              onClick={() => withdrawStake()}\r\n            >\r\n              WITHDRAWL\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid xs={12} lg={6} className=\"column\">\r\n          <Typography variant=\"h6\">Staking Rewards</Typography>\r\n\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              fullWidth\r\n              value={stakeInterest}\r\n              disabled\r\n              variant=\"outlined\"\r\n              className=\"text_feild\"\r\n              placeholder=\"Amount To Stake\"\r\n            />\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              className=\"darkbtn\"\r\n              onClick={() => checkInterest()}\r\n            >\r\n              Check Your Earnings\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              className=\"darkbtn\"\r\n              onClick={() => withdrawInterests()}\r\n            >\r\n              Collect Your Rewards\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n      </Grid> */}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./App.scss\";\r\nimport Sidebar from \"./components/sidebar\";\r\nimport Header from \"./components/header\";\r\nimport Create from \"./pages/create\";\r\nimport Dashboard from \"./pages/dashboard\";\r\nimport Sell from \"./pages/sell\";\r\nimport P2P from \"./pages/P2PMarketplace\";\r\nimport AssetSell from \"./pages/assetSell\";\r\nimport Exchange from \"./pages/exchange\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n\r\n        <Sidebar />\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <div className=\"content_container\">\r\n            <Header />\r\n\r\n            <Switch>\r\n              <Route path=\"/create\" render={(props) => <Create {...props} />} />\r\n            </Switch>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/sell\"\r\n                render={(props) => <Sell {...props} />}\r\n              />\r\n            </Switch>\r\n            <Switch>\r\n              <Route path=\"/sell/:id\" render={(props) => <Sell {...props} />} />\r\n            </Switch>\r\n            <Switch>\r\n              <Route\r\n                path=\"/exchange\"\r\n                render={(props) => <Exchange {...props} />}\r\n              />\r\n            </Switch>\r\n            <Switch>\r\n              <Route\r\n                path=\"/assetsell/:id\"\r\n                render={(props) => <AssetSell {...props} />}\r\n              />\r\n            </Switch>\r\n            <Switch>\r\n              <Route\r\n                path=\"/p2pmarketplace\"\r\n                render={(props) => <P2P {...props} />}\r\n              />\r\n            </Switch>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={(props) => <Dashboard {...props} />}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}